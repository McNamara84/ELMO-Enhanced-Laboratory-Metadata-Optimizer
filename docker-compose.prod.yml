services:
  db:
    image: mariadb:11
    environment:
      MARIADB_ROOT_PASSWORD: ${ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      TZ: Europe/Berlin
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    network_mode: bridge

  web:
    build: .
    ports:
      - "8080:80"
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      INSTALL_ACTION: basic
      TZ: Europe/Berlin
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - ./js:/var/www/html/js:ro
      - ./formgroups:/var/www/html/formgroups:ro
      - ./api:/var/www/html/api:ro
      - ./css:/var/www/html/css:ro
      - ./doc:/var/www/html/doc:ro
      - ./lang:/var/www/html/lang:ro
      - ./save:/var/www/html/save:ro
    network_mode: bridge
    labels:
      # traefik.enable=true:
      #   This label tells Traefik to enable routing for this specific service.
      #   Without this, Traefik will ignore the other Traefik-related labels on this container.
      - "traefik.enable=true"

      # traefik.http.routers.elmo-router.rule:
      #   Defines the routing rule for this service.
      #   - Host(`env.rz-vm182.gfz.de`): Matches incoming requests where the host header is exactly 'env.rz-vm182.gfz.de'.
      #   - PathPrefix(`/elmo`): Matches incoming requests where the URL path starts with '/elmo'.
      #   The '&&' operator means both conditions must be true for the router to activate.
      - "traefik.http.routers.elmo-router.rule=Host(`env.rz-vm182.gfz.de`) && PathPrefix(`/elmo`)"

      # traefik.http.routers.elmo-router.entrypoints=https:
      #   Specifies which Traefik entrypoint(s) this router should listen on.
      #   'https' indicates that this service should be accessible via HTTPS (port 443, typically).
      #   Based on your dashboard, 'https' is the standard for your environment.
      - "traefik.http.routers.elmo-router.entrypoints=https"

      # traefik.http.routers.elmo-router.middlewares=elmo-stripprefix@docker:
      #   Attaches a middleware to this router.
      #   'elmo-stripprefix@docker' refers to the middleware defined below.
      #   This middleware will be applied to the request *before* it's sent to the service.
      - "traefik.http.routers.elmo-router.middlewares=elmo-stripprefix@docker"

      # traefik.http.middlewares.elmo-stripprefix.stripprefix.prefixes=/elmo:
      #   Defines a middleware named 'elmo-stripprefix'.
      #   'stripprefix' is a Traefik middleware type that removes a specified prefix from the request URL path.
      #   'prefixes=/elmo' means that if the incoming path is '/elmo/some/page', it will be rewritten to '/some/page'
      #   before being sent to your 'web' container. This is crucial because your web app likely expects to
      #   be served from the root path ('/'), not '/elmo/'.
      #   '@docker' is a convention indicating that this middleware is defined via the Docker provider.
      - "traefik.http.middlewares.elmo-stripprefix.stripprefix.prefixes=/elmo"

      # traefik.http.services.elmo-service.loadbalancer.server.port=80:
      #   Defines the backend service that the router will forward traffic to.
      #   'elmo-service' is the name of this internal Traefik service.
      #   'loadbalancer.server.port=80' tells Traefik that the 'web' container is listening
      #   on port 80 internally. Traefik will direct traffic to this port within the container's network.
      - "traefik.http.services.elmo-service.loadbalancer.server.port=80"

volumes:
  db_data: