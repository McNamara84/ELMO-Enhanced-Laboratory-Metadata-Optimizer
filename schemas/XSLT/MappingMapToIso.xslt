<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2024

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_initial" select="."/>
		<MD_Metadata xmlns="http://www.isotc211.org/2005/gmd" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gss="http://www.isotc211.org/2005/gss" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">http://www.isotc211.org/2005/gmd file:///C:/xampp/htdocs/msl-mde/schemas/ISO/gmd.xsd</xsl:attribute>
			<xsl:for-each select="*[local-name()='Resource' and namespace-uri()='']">
				<xsl:variable name="var2_cur" select="."/>
				<fileIdentifier>
					<xsl:if test="((string-length(string(*[local-name()='doi' and namespace-uri()=''])) &gt; '1') and true())">
						<gco:CharacterString>
							<xsl:value-of select="concat('doi:', *[local-name()='doi' and namespace-uri()=''])"/>
						</gco:CharacterString>
					</xsl:if>
				</fileIdentifier>
				<language>
					<LanguageCode>
						<xsl:attribute name="codeList" namespace="">http://www.loc.gov/standards/iso639-1/</xsl:attribute>
						<xsl:attribute name="codeListValue" namespace="">
							<xsl:value-of select="*[local-name()='Language' and namespace-uri()='']/*[local-name()='code' and namespace-uri()='']"/>
						</xsl:attribute>
						<xsl:value-of select="*[local-name()='Language' and namespace-uri()='']/*[local-name()='code' and namespace-uri()='']"/>
					</LanguageCode>
				</language>
				<characterSet>
					<MD_CharacterSetCode>
						<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/codeList.xml#MD_CharacterSetCode</xsl:attribute>
						<xsl:attribute name="codeListValue" namespace="">utf8</xsl:attribute>
					</MD_CharacterSetCode>
				</characterSet>
				<hierarchyLevel>
					<MD_ScopeCode>
						<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#MD_ScopeCode</xsl:attribute>
						<xsl:attribute name="codeListValue" namespace="">dataset</xsl:attribute>
						<xsl:value-of select="'dataset'"/>
					</MD_ScopeCode>
				</hierarchyLevel>
				<contact>
					<CI_ResponsibleParty>
						<organisationName>
							<gco:CharacterString>
								<xsl:value-of select="'GFZ Helmholtz Centre for Geosciences '"/>
							</gco:CharacterString>
						</organisationName>
						<contactInfo>
							<CI_Contact>
								<address>
									<CI_Address>
										<electronicMailAddress>
											<gco:CharacterString>
												<xsl:value-of select="'datapub@gfz.de'"/>
											</gco:CharacterString>
										</electronicMailAddress>
									</CI_Address>
								</address>
								<onlineResource>
									<CI_OnlineResource>
										<linkage>
											<URL>
												<xsl:value-of select="'https://www.gfz.de/'"/>
											</URL>
										</linkage>
										<name>
											<gco:CharacterString>
												<xsl:value-of select="'GFZ Helmholtz Centre for Geosciences '"/>
											</gco:CharacterString>
										</name>
										<description>
											<gco:CharacterString>
												<xsl:value-of select="'GFZ Helmholtz Centre for Geosciences '"/>
											</gco:CharacterString>
										</description>
										<function>
											<CI_OnLineFunctionCode>
												<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_OnLineFunctionCode</xsl:attribute>
												<xsl:attribute name="codeListValue" namespace="">information</xsl:attribute>
												<xsl:value-of select="'information'"/>
											</CI_OnLineFunctionCode>
										</function>
									</CI_OnlineResource>
								</onlineResource>
							</CI_Contact>
						</contactInfo>
						<role>
							<CI_RoleCode>
								<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode</xsl:attribute>
								<xsl:attribute name="codeListValue" namespace="">pointOfContact</xsl:attribute>
								<xsl:value-of select="'pointOfContact'"/>
							</CI_RoleCode>
						</role>
					</CI_ResponsibleParty>
				</contact>
				<dateStamp>
					<gco:Date>
						<xsl:value-of select="*[local-name()='currentDate' and namespace-uri()='']"/>
					</gco:Date>
				</dateStamp>
				<referenceSystemInfo>
					<MD_ReferenceSystem>
						<referenceSystemIdentifier>
							<RS_Identifier>
								<code>
									<gco:CharacterString>
										<xsl:value-of select="'urn:ogc:def:crs:EPSG:4326'"/>
									</gco:CharacterString>
								</code>
							</RS_Identifier>
						</referenceSystemIdentifier>
					</MD_ReferenceSystem>
				</referenceSystemInfo>
				<identificationInfo>
					<MD_DataIdentification>
						<citation>
							<CI_Citation>
								<title>
									<xsl:for-each select="(./*[local-name()='Titles' and namespace-uri()='']/*[local-name()='Title' and namespace-uri()=''])[contains(*[local-name()='type' and namespace-uri()=''], 'Main Title')]">
										<xsl:variable name="var3_filter" select="."/>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='text' and namespace-uri()='']"/>
										</gco:CharacterString>
									</xsl:for-each>
								</title>
								<xsl:for-each select="*[local-name()='Titles' and namespace-uri()='']/*[local-name()='Title' and namespace-uri()='']">
									<xsl:variable name="var4_cur" select="."/>
									<xsl:choose>
										<xsl:when test="contains(*[local-name()='type' and namespace-uri()=''], 'Translated Title')">
											<alternateTitle>
												<gco:CharacterString>
													<xsl:value-of select="*[local-name()='text' and namespace-uri()='']"/>
												</gco:CharacterString>
											</alternateTitle>
										</xsl:when>
										<xsl:when test="contains(*[local-name()='type' and namespace-uri()=''], 'Alternative Title')">
											<alternateTitle>
												<gco:CharacterString>
													<xsl:value-of select="*[local-name()='text' and namespace-uri()='']"/>
												</gco:CharacterString>
											</alternateTitle>
										</xsl:when>
										<xsl:when test="contains(*[local-name()='type' and namespace-uri()=''], 'Subtitle')">
											<alternateTitle>
												<gco:CharacterString>
													<xsl:value-of select="*[local-name()='text' and namespace-uri()='']"/>
												</gco:CharacterString>
											</alternateTitle>
										</xsl:when>
									</xsl:choose>
								</xsl:for-each>
								<date>
									<CI_Date>
										<date>
											<gco:Date>
												<xsl:value-of select="*[local-name()='dateCreated' and namespace-uri()='']"/>
											</gco:Date>
										</date>
										<dateType>
											<CI_DateTypeCode>
												<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
												<xsl:attribute name="codeListValue" namespace="">creation</xsl:attribute>
												<xsl:value-of select="'creation'"/>
											</CI_DateTypeCode>
										</dateType>
									</CI_Date>
								</date>
								<xsl:for-each select="*[local-name()='Authors' and namespace-uri()='']/*[local-name()='Author' and namespace-uri()='']">
									<xsl:variable name="var5_cur" select="."/>
									<xsl:for-each select="*[local-name()='Affiliations' and namespace-uri()='']/*[local-name()='Affiliation' and namespace-uri()='']">
										<xsl:variable name="var6_cur" select="."/>
										<citedResponsibleParty>
											<xsl:if test="$var5_cur/*[local-name()='orcid' and namespace-uri()='']">
												<xsl:for-each select="$var5_cur/*[local-name()='orcid' and namespace-uri()='']">
													<xsl:variable name="var7_cur" select="."/>
													<xsl:attribute name="xlink:href">
														<xsl:value-of select="concat('http://orcid.org/', .)"/>
													</xsl:attribute>
												</xsl:for-each>
											</xsl:if>
											<CI_ResponsibleParty>
												<individualName>
													<gco:CharacterString>
														<xsl:value-of select="concat($var5_cur/*[local-name()='familyname' and namespace-uri()=''], ', ', $var5_cur/*[local-name()='givenname' and namespace-uri()=''])"/>
													</gco:CharacterString>
												</individualName>
												<organisationName>
													<gco:CharacterString>
														<xsl:value-of select="*[local-name()='name' and namespace-uri()='']"/>
													</gco:CharacterString>
												</organisationName>
												<role>
													<CI_RoleCode>
														<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode</xsl:attribute>
														<xsl:attribute name="codeListValue" namespace="">author</xsl:attribute>
														<xsl:value-of select="'author'"/>
													</CI_RoleCode>
												</role>
											</CI_ResponsibleParty>
										</citedResponsibleParty>
									</xsl:for-each>
								</xsl:for-each>
								<xsl:for-each select="(./*[local-name()='Authors' and namespace-uri()='']/*[local-name()='Author' and namespace-uri()=''])[not(*[local-name()='Affiliations' and namespace-uri()=''])]">
									<xsl:variable name="var8_filter" select="."/>
									<citedResponsibleParty>
										<xsl:if test="*[local-name()='orcid' and namespace-uri()='']">
											<xsl:for-each select="*[local-name()='orcid' and namespace-uri()='']">
												<xsl:variable name="var9_cur" select="."/>
												<xsl:attribute name="xlink:href">
													<xsl:value-of select="concat('http://orcid.org/', .)"/>
												</xsl:attribute>
											</xsl:for-each>
										</xsl:if>
										<CI_ResponsibleParty>
											<individualName>
												<gco:CharacterString>
													<xsl:value-of select="concat(*[local-name()='familyname' and namespace-uri()=''], ', ', *[local-name()='givenname' and namespace-uri()=''])"/>
												</gco:CharacterString>
											</individualName>
											<role>
												<CI_RoleCode>
													<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode</xsl:attribute>
													<xsl:attribute name="codeListValue" namespace="">author</xsl:attribute>
													<xsl:value-of select="'author'"/>
												</CI_RoleCode>
											</role>
										</CI_ResponsibleParty>
									</citedResponsibleParty>
								</xsl:for-each>
							</CI_Citation>
						</citation>
						<abstract>
							<xsl:for-each select="(./*[local-name()='Descriptions' and namespace-uri()='']/*[local-name()='Description' and namespace-uri()=''])[contains(*[local-name()='type' and namespace-uri()=''], 'Abstract')]">
								<xsl:variable name="var10_filter" select="."/>
								<gco:CharacterString>
									<xsl:value-of select="*[local-name()='description' and namespace-uri()='']"/>
								</gco:CharacterString>
							</xsl:for-each>
						</abstract>
						<xsl:for-each select="*[local-name()='ContactPersons' and namespace-uri()='']/*[local-name()='ContactPerson' and namespace-uri()='']">
							<xsl:variable name="var11_cur" select="."/>
							<xsl:for-each select="*[local-name()='Affiliations' and namespace-uri()='']/*[local-name()='Affiliation' and namespace-uri()='']">
								<xsl:variable name="var12_cur" select="."/>
								<pointOfContact>
									<CI_ResponsibleParty>
										<individualName>
											<gco:CharacterString>
												<xsl:value-of select="concat($var11_cur/*[local-name()='familyname' and namespace-uri()=''], ', ', $var11_cur/*[local-name()='givenname' and namespace-uri()=''])"/>
											</gco:CharacterString>
										</individualName>
										<organisationName>
											<gco:CharacterString>
												<xsl:value-of select="*[local-name()='name' and namespace-uri()='']"/>
											</gco:CharacterString>
										</organisationName>
										<xsl:if test="(boolean($var11_cur/*[local-name()='position' and namespace-uri()='']) and (string-length(string($var11_cur/*[local-name()='givenname' and namespace-uri()=''])) &gt; 1))">
											<xsl:for-each select="$var11_cur/*[local-name()='position' and namespace-uri()='']">
												<xsl:variable name="var13_cur" select="."/>
												<positionName>
													<gco:CharacterString>
														<xsl:value-of select="."/>
													</gco:CharacterString>
												</positionName>
											</xsl:for-each>
										</xsl:if>
										<contactInfo>
											<CI_Contact>
												<address>
													<CI_Address>
														<electronicMailAddress>
															<gco:CharacterString>
																<xsl:value-of select="$var11_cur/*[local-name()='email' and namespace-uri()='']"/>
															</gco:CharacterString>
														</electronicMailAddress>
													</CI_Address>
												</address>
												<xsl:for-each select="($var11_cur/*[local-name()='website' and namespace-uri()=''])[((string-length(string(.)) &gt; 1) and boolean($var11_cur/*[local-name()='website' and namespace-uri()='']))]">
													<xsl:variable name="var14_filter" select="."/>
													<onlineResource>
														<CI_OnlineResource>
															<linkage>
																<URL>
																	<xsl:value-of select="."/>
																</URL>
															</linkage>
															<function>
																<CI_OnLineFunctionCode>
																	<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_OnLineFunctionCode</xsl:attribute>
																	<xsl:attribute name="codeListValue" namespace="">information</xsl:attribute>
																	<xsl:value-of select="'information'"/>
																</CI_OnLineFunctionCode>
															</function>
														</CI_OnlineResource>
													</onlineResource>
												</xsl:for-each>
											</CI_Contact>
										</contactInfo>
										<role>
											<CI_RoleCode>
												<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode</xsl:attribute>
												<xsl:attribute name="codeListValue" namespace="">pointOfContact</xsl:attribute>
												<xsl:value-of select="'pointOfContact'"/>
											</CI_RoleCode>
										</role>
									</CI_ResponsibleParty>
								</pointOfContact>
							</xsl:for-each>
						</xsl:for-each>
						<xsl:for-each select="(./*[local-name()='ContactPersons' and namespace-uri()='']/*[local-name()='ContactPerson' and namespace-uri()=''])[not(*[local-name()='Affiliations' and namespace-uri()=''])]">
							<xsl:variable name="var15_filter" select="."/>
							<pointOfContact>
								<CI_ResponsibleParty>
									<individualName>
										<gco:CharacterString>
											<xsl:value-of select="concat(*[local-name()='familyname' and namespace-uri()=''], ', ', *[local-name()='givenname' and namespace-uri()=''])"/>
										</gco:CharacterString>
									</individualName>
									<contactInfo>
										<CI_Contact>
											<address>
												<CI_Address>
													<electronicMailAddress>
														<gco:CharacterString>
															<xsl:value-of select="*[local-name()='email' and namespace-uri()='']"/>
														</gco:CharacterString>
													</electronicMailAddress>
												</CI_Address>
											</address>
											<onlineResource>
												<CI_OnlineResource>
													<linkage>
														<xsl:for-each select="(./*[local-name()='website' and namespace-uri()=''])[((string-length(string(.)) &gt; 1) and boolean($var15_filter/*[local-name()='website' and namespace-uri()='']))]">
															<xsl:variable name="var16_filter" select="."/>
															<URL>
																<xsl:value-of select="."/>
															</URL>
														</xsl:for-each>
													</linkage>
												</CI_OnlineResource>
											</onlineResource>
										</CI_Contact>
									</contactInfo>
									<role>
										<CI_RoleCode>
											<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode</xsl:attribute>
											<xsl:attribute name="codeListValue" namespace="">pointOfContact</xsl:attribute>
											<xsl:value-of select="'pointOfContact'"/>
										</CI_RoleCode>
									</role>
								</CI_ResponsibleParty>
							</pointOfContact>
						</xsl:for-each>
						<descriptiveKeywords>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/paleomagnetism/1.3/')]">
								<xsl:variable name="var17_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/paleomagnetism/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/geologicalsetting/1.3/')]">
								<xsl:variable name="var18_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/geologicalsetting/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/geologicalage/1.3/')]">
								<xsl:variable name="var19_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/geologicalage/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/analoguemodelling/1.3/')]">
								<xsl:variable name="var20_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/analoguemodelling/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/rockphysics/1.3/')]">
								<xsl:variable name="var21_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/rockphysics/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/porefluids/1.3/')]">
								<xsl:variable name="var22_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/porefluids/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/materials/1.3/')]">
								<xsl:variable name="var23_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/materials/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/geochemistry/1.3/')]">
								<xsl:variable name="var24_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/geochemistry/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/testbeds/1.3/')]">
								<xsl:variable name="var25_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/testbeds/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/subsurface/1.3/')]">
								<xsl:variable name="var26_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/subsurface/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
							<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'https://epos-msl.uu.nl/voc/microscopy/1.3/')]">
								<xsl:variable name="var27_filter" select="."/>
								<MD_Keywords>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
									<thesaurusName>
										<CI_Citation>
											<title>
												<gco:CharacterString>
													<xsl:value-of select="'https://epos-msl.uu.nl/voc/microscopy/1.3/'"/>
												</gco:CharacterString>
											</title>
											<date>
												<CI_Date>
													<date>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</date>
													<dateType>
														<CI_DateTypeCode>
															<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
															<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
															<xsl:value-of select="'lastUpdate'"/>
														</CI_DateTypeCode>
													</dateType>
												</CI_Date>
											</date>
										</CI_Citation>
									</thesaurusName>
								</MD_Keywords>
							</xsl:for-each>
						</descriptiveKeywords>
						<descriptiveKeywords>
							<MD_Keywords>
								<xsl:for-each select="(./*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()=''])[contains(*[local-name()='scheme' and namespace-uri()=''], 'NASA/GCMD Earth Science Keywords')]">
									<xsl:variable name="var28_filter" select="."/>
									<keyword>
										<gco:CharacterString>
											<xsl:value-of select="*[local-name()='keyword' and namespace-uri()='']"/>
										</gco:CharacterString>
									</keyword>
								</xsl:for-each>
								<thesaurusName>
									<CI_Citation>
										<title>
											<gco:CharacterString>
												<xsl:value-of select="'NASA/GCMD Earth Science Keywords'"/>
											</gco:CharacterString>
										</title>
										<date>
											<CI_Date>
												<date>
													<xsl:for-each select="*[local-name()='ThesaurusKeywords' and namespace-uri()='']/*[local-name()='Keyword' and namespace-uri()='']">
														<xsl:variable name="var29_cur" select="."/>
														<gco:Date>
															<xsl:value-of select="*[local-name()='lastUpdated' and namespace-uri()='']"/>
														</gco:Date>
													</xsl:for-each>
												</date>
												<dateType>
													<CI_DateTypeCode>
														<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_DateTypeCode</xsl:attribute>
														<xsl:attribute name="codeListValue" namespace="">lastUpdate</xsl:attribute>
														<xsl:value-of select="'lastUpdate'"/>
													</CI_DateTypeCode>
												</dateType>
											</CI_Date>
										</date>
									</CI_Citation>
								</thesaurusName>
							</MD_Keywords>
						</descriptiveKeywords>
						<xsl:for-each select="*[local-name()='FreeKeywords' and namespace-uri()='']">
							<xsl:variable name="var30_cur" select="."/>
							<descriptiveKeywords>
								<MD_Keywords>
									<xsl:for-each select="*[local-name()='Keyword' and namespace-uri()='']">
										<xsl:variable name="var31_cur" select="."/>
										<keyword>
											<gco:CharacterString>
												<xsl:value-of select="*[local-name()='free_keyword' and namespace-uri()='']"/>
											</gco:CharacterString>
										</keyword>
									</xsl:for-each>
								</MD_Keywords>
							</descriptiveKeywords>
						</xsl:for-each>
						<resourceConstraints>
							<xsl:attribute name="xlink:href">
								<xsl:value-of select="*[local-name()='Rights' and namespace-uri()='']/*[local-name()='rightsURI' and namespace-uri()='']"/>
							</xsl:attribute>
							<MD_Constraints>
								<useLimitation>
									<gco:CharacterString>
										<xsl:value-of select="*[local-name()='Rights' and namespace-uri()='']/*[local-name()='text' and namespace-uri()='']"/>
									</gco:CharacterString>
								</useLimitation>
							</MD_Constraints>
						</resourceConstraints>
						<resourceConstraints>
							<MD_LegalConstraints>
								<accessConstraints>
									<MD_RestrictionCode>
										<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/codeList.xml#MD_RestrictionCode</xsl:attribute>
										<xsl:attribute name="codeListValue" namespace="">otherRestrictions</xsl:attribute>
									</MD_RestrictionCode>
								</accessConstraints>
								<otherConstraints>
									<gco:CharacterString>
										<xsl:value-of select="*[local-name()='Rights' and namespace-uri()='']/*[local-name()='text' and namespace-uri()='']"/>
									</gco:CharacterString>
								</otherConstraints>
							</MD_LegalConstraints>
						</resourceConstraints>
						<resourceConstraints>
							<MD_SecurityConstraints>
								<classification>
									<MD_ClassificationCode>
										<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/codeList.xml#MD_ClassificationCode</xsl:attribute>
										<xsl:attribute name="codeListValue" namespace="">unclassified</xsl:attribute>
									</MD_ClassificationCode>
								</classification>
							</MD_SecurityConstraints>
						</resourceConstraints>
						<xsl:for-each select="*[local-name()='RelatedWorks' and namespace-uri()='']/*[local-name()='RelatedWork' and namespace-uri()='']">
							<xsl:variable name="var32_cur" select="."/>
							<aggregationInfo>
								<MD_AggregateInformation>
									<aggregateDataSetIdentifier>
										<RS_Identifier>
											<code>
												<gco:CharacterString>
													<xsl:value-of select="*[local-name()='Identifier' and namespace-uri()='']"/>
												</gco:CharacterString>
											</code>
											<codeSpace>
												<gco:CharacterString>
													<xsl:value-of select="*[local-name()='IdentifierType' and namespace-uri()='']/*[local-name()='name' and namespace-uri()='']"/>
												</gco:CharacterString>
											</codeSpace>
										</RS_Identifier>
									</aggregateDataSetIdentifier>
									<associationType>
										<DS_AssociationTypeCode>
											<xsl:attribute name="codeList" namespace="">http://datacite.org/schema/kernel-4</xsl:attribute>
											<xsl:attribute name="codeListValue" namespace="">
												<xsl:value-of select="*[local-name()='Relation' and namespace-uri()='']/*[local-name()='name' and namespace-uri()='']"/>
											</xsl:attribute>
											<xsl:value-of select="*[local-name()='Relation' and namespace-uri()='']/*[local-name()='name' and namespace-uri()='']"/>
										</DS_AssociationTypeCode>
									</associationType>
								</MD_AggregateInformation>
							</aggregationInfo>
						</xsl:for-each>
						<language>
							<gco:CharacterString>
								<xsl:value-of select="*[local-name()='Language' and namespace-uri()='']/*[local-name()='code' and namespace-uri()='']"/>
							</gco:CharacterString>
						</language>
						<characterSet>
							<MD_CharacterSetCode>
								<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/codeList.xml#MD_CharacterSetCode</xsl:attribute>
								<xsl:attribute name="codeListValue" namespace="">utf8</xsl:attribute>
							</MD_CharacterSetCode>
						</characterSet>
						<topicCategory>
							<MD_TopicCategoryCode>
								<xsl:value-of select="'geoscientificInformation'"/>
							</MD_TopicCategoryCode>
						</topicCategory>
						<xsl:for-each select="*[local-name()='SpatialTemporalCoverages' and namespace-uri()='']/*[local-name()='SpatialTemporalCoverage' and namespace-uri()='']">
							<xsl:variable name="var33_cur" select="."/>
							<extent>
								<EX_Extent>
									<description>
										<xsl:for-each select="*[local-name()='description' and namespace-uri()='']">
											<xsl:variable name="var34_cur" select="."/>
											<gco:CharacterString>
												<xsl:value-of select="."/>
											</gco:CharacterString>
										</xsl:for-each>
									</description>
									<geographicElement>
										<EX_GeographicBoundingBox>
											<westBoundLongitude>
												<xsl:for-each select="*[local-name()='longitudeMin' and namespace-uri()='']">
													<xsl:variable name="var35_cur" select="."/>
													<gco:Decimal>
														<xsl:value-of select="number(.)"/>
													</gco:Decimal>
												</xsl:for-each>
											</westBoundLongitude>
											<eastBoundLongitude>
												<xsl:choose>
													<xsl:when test="(((boolean(*[local-name()='latitudeMin' and namespace-uri()='']) and boolean(*[local-name()='latitudeMax' and namespace-uri()=''])) and boolean(*[local-name()='longitudeMin' and namespace-uri()=''])) and boolean(*[local-name()='longitudeMax' and namespace-uri()='']))">
														<xsl:for-each select="*[local-name()='longitudeMax' and namespace-uri()='']">
															<xsl:variable name="var36_cur" select="."/>
															<gco:Decimal>
																<xsl:value-of select="number(.)"/>
															</gco:Decimal>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="*[local-name()='longitudeMin' and namespace-uri()='']">
															<xsl:variable name="var37_cur" select="."/>
															<gco:Decimal>
																<xsl:value-of select="number(.)"/>
															</gco:Decimal>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</eastBoundLongitude>
											<southBoundLatitude>
												<xsl:for-each select="*[local-name()='latitudeMin' and namespace-uri()='']">
													<xsl:variable name="var38_cur" select="."/>
													<gco:Decimal>
														<xsl:value-of select="number(.)"/>
													</gco:Decimal>
												</xsl:for-each>
											</southBoundLatitude>
											<northBoundLatitude>
												<xsl:choose>
													<xsl:when test="(((boolean(*[local-name()='latitudeMin' and namespace-uri()='']) and boolean(*[local-name()='latitudeMax' and namespace-uri()=''])) and boolean(*[local-name()='longitudeMin' and namespace-uri()=''])) and boolean(*[local-name()='longitudeMax' and namespace-uri()='']))">
														<xsl:for-each select="*[local-name()='latitudeMax' and namespace-uri()='']">
															<xsl:variable name="var39_cur" select="."/>
															<gco:Decimal>
																<xsl:value-of select="number(.)"/>
															</gco:Decimal>
														</xsl:for-each>
													</xsl:when>
													<xsl:otherwise>
														<xsl:for-each select="*[local-name()='latitudeMin' and namespace-uri()='']">
															<xsl:variable name="var40_cur" select="."/>
															<gco:Decimal>
																<xsl:value-of select="number(.)"/>
															</gco:Decimal>
														</xsl:for-each>
													</xsl:otherwise>
												</xsl:choose>
											</northBoundLatitude>
										</EX_GeographicBoundingBox>
									</geographicElement>
									<temporalElement>
										<EX_TemporalExtent>
											<extent>
												<gml:TimePeriod>
													<xsl:for-each select="*[local-name()='dateStart' and namespace-uri()='']">
														<xsl:variable name="var41_cur" select="."/>
														<xsl:choose>
															<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																<xsl:for-each select="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																	<xsl:variable name="var42_cur" select="."/>
																	<xsl:choose>
																		<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																			<xsl:for-each select="$var33_cur/*[local-name()='timezone' and namespace-uri()='']">
																				<xsl:variable name="var43_cur" select="."/>
																				<gml:beginPosition>
																					<xsl:variable name="var44_nested">
																						<xsl:choose>
																							<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																								<xsl:value-of select="'T'"/>
																							</xsl:when>
																							<xsl:otherwise>
																								<xsl:value-of select="''"/>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:variable>
																					<xsl:value-of select="concat($var41_cur, $var44_nested, $var42_cur, .)"/>
																				</gml:beginPosition>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<gml:beginPosition>
																				<xsl:variable name="var45_nested">
																					<xsl:choose>
																						<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																							<xsl:value-of select="'T'"/>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:value-of select="''"/>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:variable>
																				<xsl:value-of select="concat($var41_cur, $var45_nested, ., '')"/>
																			</gml:beginPosition>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																<xsl:for-each select="$var33_cur/*[local-name()='timezone' and namespace-uri()='']">
																	<xsl:variable name="var46_cur" select="."/>
																	<gml:beginPosition>
																		<xsl:variable name="var47_nested">
																			<xsl:choose>
																				<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																					<xsl:value-of select="'T'"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:value-of select="concat($var41_cur, $var47_nested, '', .)"/>
																	</gml:beginPosition>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<gml:beginPosition>
																	<xsl:variable name="var48_nested">
																		<xsl:choose>
																			<xsl:when test="$var33_cur/*[local-name()='timeStart' and namespace-uri()='']">
																				<xsl:value-of select="'T'"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:value-of select="concat(., $var48_nested, '', '')"/>
																</gml:beginPosition>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
													<xsl:for-each select="*[local-name()='dateEnd' and namespace-uri()='']">
														<xsl:variable name="var49_cur" select="."/>
														<xsl:choose>
															<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																<xsl:for-each select="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																	<xsl:variable name="var50_cur" select="."/>
																	<xsl:choose>
																		<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																			<xsl:for-each select="$var33_cur/*[local-name()='timezone' and namespace-uri()='']">
																				<xsl:variable name="var51_cur" select="."/>
																				<gml:endPosition>
																					<xsl:variable name="var52_nested">
																						<xsl:choose>
																							<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																								<xsl:value-of select="'T'"/>
																							</xsl:when>
																							<xsl:otherwise>
																								<xsl:value-of select="''"/>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:variable>
																					<xsl:value-of select="concat($var49_cur, $var52_nested, $var50_cur, .)"/>
																				</gml:endPosition>
																			</xsl:for-each>
																		</xsl:when>
																		<xsl:otherwise>
																			<gml:endPosition>
																				<xsl:variable name="var53_nested">
																					<xsl:choose>
																						<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																							<xsl:value-of select="'T'"/>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:value-of select="''"/>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:variable>
																				<xsl:value-of select="concat($var49_cur, $var53_nested, ., '')"/>
																			</gml:endPosition>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																<xsl:for-each select="$var33_cur/*[local-name()='timezone' and namespace-uri()='']">
																	<xsl:variable name="var54_cur" select="."/>
																	<gml:endPosition>
																		<xsl:variable name="var55_nested">
																			<xsl:choose>
																				<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																					<xsl:value-of select="'T'"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="''"/>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:variable>
																		<xsl:value-of select="concat($var49_cur, $var55_nested, '', .)"/>
																	</gml:endPosition>
																</xsl:for-each>
															</xsl:when>
															<xsl:otherwise>
																<gml:endPosition>
																	<xsl:variable name="var56_nested">
																		<xsl:choose>
																			<xsl:when test="$var33_cur/*[local-name()='timeEnd' and namespace-uri()='']">
																				<xsl:value-of select="'T'"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="''"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>
																	<xsl:value-of select="concat(., $var56_nested, '', '')"/>
																</gml:endPosition>
															</xsl:otherwise>
														</xsl:choose>
													</xsl:for-each>
												</gml:TimePeriod>
											</extent>
										</EX_TemporalExtent>
									</temporalElement>
								</EX_Extent>
							</extent>
						</xsl:for-each>
					</MD_DataIdentification>
				</identificationInfo>
				<distributionInfo>
					<MD_Distribution>
						<transferOptions>
							<MD_DigitalTransferOptions>
								<onLine>
									<CI_OnlineResource>
										<linkage>
											<xsl:if test="((string-length(string(*[local-name()='doi' and namespace-uri()=''])) &gt; '1') and true())">
												<URL>
													<xsl:value-of select="concat('http://doi.org/', *[local-name()='doi' and namespace-uri()=''])"/>
												</URL>
											</xsl:if>
										</linkage>
										<protocol>
											<gco:CharacterString>
												<xsl:value-of select="'WWW:LINK-1.0-http--link'"/>
											</gco:CharacterString>
										</protocol>
										<name>
											<gco:CharacterString>
												<xsl:value-of select="'Data Access - DOI'"/>
											</gco:CharacterString>
										</name>
										<description>
											<gco:CharacterString>
												<xsl:value-of select="'Data Access - DOI'"/>
											</gco:CharacterString>
										</description>
										<function>
											<CI_OnLineFunctionCode>
												<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_OnLineFunctionCode</xsl:attribute>
												<xsl:attribute name="codeListValue" namespace="">information</xsl:attribute>
												<xsl:value-of select="'information'"/>
											</CI_OnLineFunctionCode>
										</function>
									</CI_OnlineResource>
								</onLine>
							</MD_DigitalTransferOptions>
						</transferOptions>
					</MD_Distribution>
				</distributionInfo>
				<dataQualityInfo>
					<DQ_DataQuality>
						<scope>
							<DQ_Scope>
								<level>
									<MD_ScopeCode>
										<xsl:attribute name="codeList" namespace="">http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#MD_ScopeCode</xsl:attribute>
										<xsl:attribute name="codeListValue" namespace="">dataset</xsl:attribute>
									</MD_ScopeCode>
								</level>
							</DQ_Scope>
						</scope>
					</DQ_DataQuality>
				</dataQualityInfo>
			</xsl:for-each>
		</MD_Metadata>
	</xsl:template>
</xsl:stylesheet>
